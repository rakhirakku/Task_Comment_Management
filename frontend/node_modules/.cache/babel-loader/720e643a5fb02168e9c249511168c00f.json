{"ast":null,"code":"var _jsxFileName = \"/home/rakhi/Project/Task_Comment_management_project/frontend/src/Pages/Home/FilterForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchFilterTasks } from \"../../api\"; // Import the filter function from api.js\nimport CardWrapper from \"../../Pages/Home/CardWrapper\"; // Import CardWrapper\n\nexport const FilterForm = () => {\n  // State to hold filtered tasks\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  // States to hold selected filter values\n  const [selectedStartDate, setSelectedStartDate] = useState(\"\"); // Selected filter: Start Date\n  const [selectedEndDate, setSelectedEndDate] = useState(\"\"); // Selected filter: End Date\n  const [selectedStatus, setSelectedStatus] = useState(\"\"); // Selected filter: Status\n\n  // State to manage pagination metadata\n  const [pagination, setPagination] = useState(null);\n\n  // State to handle errors during API requests\n  const [error, setError] = useState(null);\n\n  // State to manage the current page number for pagination\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Fetch filtered tasks from API when filters or page changes\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Call the API with the selected filters and current page\n        const data = await fetchFilterTasks(selectedStartDate, selectedEndDate, selectedStatus, currentPage);\n\n        // Set the filtered tasks\n        setFilteredTasks(data.data);\n\n        // Set pagination metadata (current page, last page, etc.)\n        setPagination({\n          current_page: data.current_page,\n          last_page: data.last_page,\n          prev_page_url: data.prev_page_url,\n          next_page_url: data.next_page_url\n        });\n      } catch (err) {\n        // Handle any errors that occur during the API request\n        setError(err);\n      }\n    };\n\n    // Fetch data whenever filters or current page changes\n    fetchData();\n  }, [selectedStartDate, selectedEndDate, selectedStatus, currentPage]); // Dependencies: filters and current page\n\n  // Handlers for select changes to update filter values\n  const handleStartDateChange = e => setSelectedStartDate(e.target.value);\n  const handleEndDateChange = e => setSelectedEndDate(e.target.value);\n  const handleStatusChange = e => setSelectedStatus(e.target.value);\n\n  // Handle page change when navigating through pagination\n  const handlePageChange = url => {\n    if (url) {\n      // Extract the page number from the URL\n      const pageNumber = new URL(url).searchParams.get(\"page\");\n      setCurrentPage(Number(pageNumber)); // Update current page based on URL\n    }\n  };\n\n  // If there's an error, display it\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"filter-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Filter By\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filter-with-date-range\",\n    className: \"select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"filter-from-date\",\n    className: \"form-control\",\n    value: selectedStartDate,\n    onChange: handleStartDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"filter-to-date\",\n    className: \"form-control\",\n    value: selectedEndDate,\n    onChange: handleEndDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filter-with-status\",\n    className: \"select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-select\",\n    id: \"filter-with-status\",\n    value: selectedStatus,\n    onChange: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"All Statuses\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Pending\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"in-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Completed\")))), /*#__PURE__*/React.createElement(CardWrapper, {\n    tasks: filteredTasks || [],\n    pagination: pagination // Pass pagination data\n    ,\n    onPageChange: handlePageChange // Handle page change event\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n};\nexport default FilterForm;","map":{"version":3,"names":["React","useState","useEffect","fetchFilterTasks","CardWrapper","FilterForm","filteredTasks","setFilteredTasks","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","selectedStatus","setSelectedStatus","pagination","setPagination","error","setError","currentPage","setCurrentPage","fetchData","data","current_page","last_page","prev_page_url","next_page_url","err","handleStartDateChange","e","target","value","handleEndDateChange","handleStatusChange","handlePageChange","url","pageNumber","URL","searchParams","get","Number","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","className","htmlFor","type","id","onChange","tasks","onPageChange"],"sources":["/home/rakhi/Project/Task_Comment_management_project/frontend/src/Pages/Home/FilterForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchFilterTasks } from \"../../api\"; // Import the filter function from api.js\nimport CardWrapper from \"../../Pages/Home/CardWrapper\"; // Import CardWrapper\n\nexport const FilterForm = () => {\n  // State to hold filtered tasks\n  const [filteredTasks, setFilteredTasks] = useState([]); \n\n  // States to hold selected filter values\n  const [selectedStartDate, setSelectedStartDate] = useState(\"\"); // Selected filter: Start Date\n  const [selectedEndDate, setSelectedEndDate] = useState(\"\"); // Selected filter: End Date\n  const [selectedStatus, setSelectedStatus] = useState(\"\"); // Selected filter: Status\n\n  // State to manage pagination metadata\n  const [pagination, setPagination] = useState(null);\n\n  // State to handle errors during API requests\n  const [error, setError] = useState(null);\n\n  // State to manage the current page number for pagination\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Fetch filtered tasks from API when filters or page changes\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Call the API with the selected filters and current page\n        const data = await fetchFilterTasks(\n          selectedStartDate,\n          selectedEndDate,\n          selectedStatus,\n          currentPage\n        );\n\n        // Set the filtered tasks\n        setFilteredTasks(data.data); \n\n        // Set pagination metadata (current page, last page, etc.)\n        setPagination({\n          current_page: data.current_page,\n          last_page: data.last_page,\n          prev_page_url: data.prev_page_url,\n          next_page_url: data.next_page_url,\n        });\n      } catch (err) {\n        // Handle any errors that occur during the API request\n        setError(err);\n      }\n    };\n\n    // Fetch data whenever filters or current page changes\n    fetchData();\n  }, [selectedStartDate, selectedEndDate, selectedStatus, currentPage]); // Dependencies: filters and current page\n\n  // Handlers for select changes to update filter values\n  const handleStartDateChange = (e) => setSelectedStartDate(e.target.value);\n  const handleEndDateChange = (e) => setSelectedEndDate(e.target.value);\n  const handleStatusChange = (e) => setSelectedStatus(e.target.value);\n\n  // Handle page change when navigating through pagination\n  const handlePageChange = (url) => {\n    if (url) {\n      // Extract the page number from the URL\n      const pageNumber = new URL(url).searchParams.get(\"page\");\n      setCurrentPage(Number(pageNumber)); // Update current page based on URL\n    }\n  };\n\n  // If there's an error, display it\n  if (error) {\n    return <p>Error: {error.message}</p>;\n  }\n\n  return (\n    <div>\n      {/* Filter Form */}\n      <form className=\"filter-form\">\n        <h6>Filter By</h6>\n\n        {/* Filter by Due Date Range */}\n        <div className=\"input-group\">\n          <label htmlFor=\"filter-with-date-range\" className=\"select-label\">\n            Due Date\n          </label>\n          <div className=\"d-flex\">\n            {/* From Date Picker */}\n            <input\n              type=\"date\"\n              id=\"filter-from-date\"\n              className=\"form-control\"\n              value={selectedStartDate}\n              onChange={handleStartDateChange}\n            />\n            {/* To Date Picker */}\n            <input\n              type=\"date\"\n              id=\"filter-to-date\"\n              className=\"form-control\"\n              value={selectedEndDate}\n              onChange={handleEndDateChange}\n            />\n          </div>\n        </div>\n\n        {/* Filter by Status */}\n        <div className=\"input-group\">\n          <label htmlFor=\"filter-with-status\" className=\"select-label\">\n            Status\n          </label>\n          <select\n            className=\"form-select\"\n            id=\"filter-with-status\"\n            value={selectedStatus}\n            onChange={handleStatusChange}\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"pending\">Pending</option>\n            <option value=\"in-progress\">In Progress</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </div>\n      </form>\n\n      {/* Pass filtered tasks and pagination metadata to CardWrapper */}\n      <CardWrapper\n        tasks={filteredTasks || []}\n        pagination={pagination} // Pass pagination data\n        onPageChange={handlePageChange} // Handle page change event\n      />\n    </div>\n  );\n};\n\nexport default FilterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}