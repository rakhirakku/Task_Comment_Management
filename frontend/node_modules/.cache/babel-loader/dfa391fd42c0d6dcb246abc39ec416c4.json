{"ast":null,"code":"var _jsxFileName = \"/home/rakhi/Project/Laravel-Task/src/context/AuthContext.js\";\n// import React, { createContext, useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// export const AuthContext = createContext(); // Named export for AuthContext\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [token, setToken] = useState(localStorage.getItem('auth_token'));\n\n//   useEffect(() => {\n//     if (token) {\n//       axios.defaults.headers['Authorization'] = `Bearer ${token}`;\n//       fetchUser();\n//     }\n//   }, [token]);\n\n//   const fetchUser = async () => {\n//     try {\n//       const response = await axios.get('http://127.0.0.1:8000/api/user');\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error('Failed to fetch user', error);\n//     }\n//   };\n\n//   const login = async (email, password) => {\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/login', { email, password });\n//       const { access_token } = response.data;\n//       localStorage.setItem('auth_token', access_token);\n//       setToken(access_token);\n//     } catch (error) {\n//       console.error('Login failed', error);\n//     }\n//   };\n\n//   const register = async (name, email, password, password_confirmation) => {\n//     try {\n//       await axios.post('http://127.0.0.1:8000/api/register', {\n//         name,\n//         email,\n//         password,\n//         password_confirmation,\n//       });\n//       alert('Registration successful');\n//     } catch (error) {\n//       console.error('Registration failed', error);\n//     }\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem('auth_token');\n//     setToken(null);\n//     setUser(null);\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, token, login, register, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export default AuthContext;\n\n// src/context/AuthContext.js\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create a context to provide authentication state\nexport const AuthContext = createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"auth_token\"));\n\n  // Check token on load and fetch user data\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false); // No token, finish loading\n    }\n  }, [token]);\n  const fetchUser = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/api/user\");\n      setUser(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch user\", error);\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/login\", {\n        email,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem(\"auth_token\", access_token);\n      setToken(access_token);\n    } catch (error) {\n      console.error(\"Login failed\", error);\n    }\n  };\n  const register = async (name, email, password, password_confirmation) => {\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/register\", {\n        name,\n        email,\n        password,\n        password_confirmation\n      });\n      alert(\"Registration successful\");\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"auth_token\");\n    setToken(null);\n    setUser(null);\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","fetchUser","response","get","data","error","console","login","email","password","post","access_token","setItem","register","name","password_confirmation","alert","logout","removeItem","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/rakhi/Project/Laravel-Task/src/context/AuthContext.js"],"sourcesContent":["// import React, { createContext, useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// export const AuthContext = createContext(); // Named export for AuthContext\n\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [token, setToken] = useState(localStorage.getItem('auth_token'));\n\n//   useEffect(() => {\n//     if (token) {\n//       axios.defaults.headers['Authorization'] = `Bearer ${token}`;\n//       fetchUser();\n//     }\n//   }, [token]);\n\n//   const fetchUser = async () => {\n//     try {\n//       const response = await axios.get('http://127.0.0.1:8000/api/user');\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error('Failed to fetch user', error);\n//     }\n//   };\n\n//   const login = async (email, password) => {\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/login', { email, password });\n//       const { access_token } = response.data;\n//       localStorage.setItem('auth_token', access_token);\n//       setToken(access_token);\n//     } catch (error) {\n//       console.error('Login failed', error);\n//     }\n//   };\n\n//   const register = async (name, email, password, password_confirmation) => {\n//     try {\n//       await axios.post('http://127.0.0.1:8000/api/register', {\n//         name,\n//         email,\n//         password,\n//         password_confirmation,\n//       });\n//       alert('Registration successful');\n//     } catch (error) {\n//       console.error('Registration failed', error);\n//     }\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem('auth_token');\n//     setToken(null);\n//     setUser(null);\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, token, login, register, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export default AuthContext;\n\n// src/context/AuthContext.js\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create a context to provide authentication state\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"auth_token\"));\n\n  // Check token on load and fetch user data\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false); // No token, finish loading\n    }\n  }, [token]);\n\n  const fetchUser = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/api/user\");\n      setUser(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch user\", error);\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/login\", { email, password });\n      const { access_token } = response.data;\n      localStorage.setItem(\"auth_token\", access_token);\n      setToken(access_token);\n    } catch (error) {\n      console.error(\"Login failed\", error);\n    }\n  };\n\n  const register = async (name, email, password, password_confirmation) => {\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/register\", {\n        name,\n        email,\n        password,\n        password_confirmation,\n      });\n      alert(\"Registration successful\");\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"auth_token\");\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}