{"ast":null,"code":"// import React, { createContext, useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// // Create a context to provide authentication state\n// export const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [token, setToken] = useState(localStorage.getItem(\"auth_token\"));\n\n//   // Check token on load and fetch user data\n//   useEffect(() => {\n//     if (token) {\n//       axios.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n//       fetchUser();\n//     } else {\n//       setLoading(false); // No token, finish loading\n//     }\n//   }, [token]);\n\n//   const fetchUser = async () => {\n//     try {\n//       const response = await axios.get(\"http://127.0.0.1:8000/api/user\");\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error(\"Failed to fetch user\", error);\n//       setLoading(false);\n//     }\n//   };\n\n//   const login = async (email, password) => {\n//     try {\n//       const response = await axios.post(\"http://127.0.0.1:8000/api/login\", { email, password });\n//       const { access_token } = response.data;\n//       localStorage.setItem(\"auth_token\", access_token);\n//       setToken(access_token);\n//     } catch (error) {\n//       console.error(\"Login failed\", error);\n//     }\n//   };\n\n//   const register = async (name, email, password, password_confirmation) => {\n//     try {\n//       await axios.post(\"http://127.0.0.1:8000/api/register\", {\n//         name,\n//         email,\n//         password,\n//         password_confirmation,\n//       });\n//       alert(\"Registration successful\");\n//     } catch (error) {\n//       console.error(\"Registration failed\", error);\n//     }\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem(\"auth_token\");\n//     setToken(null);\n//     setUser(null);\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, loading, login, register, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export default AuthContext;","map":{"version":3,"names":[],"sources":["/home/rakhi/Project/Laravel-Task/src/context/AuthContext.js"],"sourcesContent":["// import React, { createContext, useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// // Create a context to provide authentication state\n// export const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [token, setToken] = useState(localStorage.getItem(\"auth_token\"));\n\n//   // Check token on load and fetch user data\n//   useEffect(() => {\n//     if (token) {\n//       axios.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n//       fetchUser();\n//     } else {\n//       setLoading(false); // No token, finish loading\n//     }\n//   }, [token]);\n\n//   const fetchUser = async () => {\n//     try {\n//       const response = await axios.get(\"http://127.0.0.1:8000/api/user\");\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error(\"Failed to fetch user\", error);\n//       setLoading(false);\n//     }\n//   };\n\n//   const login = async (email, password) => {\n//     try {\n//       const response = await axios.post(\"http://127.0.0.1:8000/api/login\", { email, password });\n//       const { access_token } = response.data;\n//       localStorage.setItem(\"auth_token\", access_token);\n//       setToken(access_token);\n//     } catch (error) {\n//       console.error(\"Login failed\", error);\n//     }\n//   };\n\n//   const register = async (name, email, password, password_confirmation) => {\n//     try {\n//       await axios.post(\"http://127.0.0.1:8000/api/register\", {\n//         name,\n//         email,\n//         password,\n//         password_confirmation,\n//       });\n//       alert(\"Registration successful\");\n//     } catch (error) {\n//       console.error(\"Registration failed\", error);\n//     }\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem(\"auth_token\");\n//     setToken(null);\n//     setUser(null);\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, loading, login, register, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export default AuthContext;\n\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}