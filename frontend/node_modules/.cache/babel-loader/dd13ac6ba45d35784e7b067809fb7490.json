{"ast":null,"code":"var _jsxFileName = \"/home/rakhi/Project/Task_Comment_management_project/frontend/src/Pages/TaskDetails/TaskDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FaRegClock, FaStarHalfAlt } from \"react-icons/fa\";\nimport \"./TaskDetails.scss\";\nimport CommentForm from \"./CommentForm/CommentForm\";\nimport { fetchTaskDetails } from \"../../api\"; // Import the API call\n\nconst CardDetails = () => {\n  const {\n    id\n  } = useParams(); // Extract task ID from the URL parameters\n\n  // State to hold task details\n  const [taskDetails, setTaskDetails] = useState({\n    title: \"\",\n    date: \"\",\n    status: \"\",\n    description: \"\"\n  });\n  const [loading, setLoading] = useState(true); // State to manage loading status\n  const [error, setError] = useState(null); // State to handle errors\n\n  // Fetch task details when the component mounts or when the task ID changes\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        setLoading(true); // Start loading\n        const data = await fetchTaskDetails(id); // Call the API with the task ID\n        setTaskDetails(data || {}); // Update task details or fallback to an empty object\n      } catch (error) {\n        console.error(\"Error fetching task data:\", error);\n        setError(error.message); // Update error state with the error message\n      } finally {\n        setLoading(false); // Stop loading\n      }\n    };\n    fetchDetails();\n  }, [id]);\n\n  // Handle loading state\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  // Handle error state\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Error: \", error);\n\n  // Helper function to format date and time\n  const formatDateAndTime = dateString => {\n    const date = new Date(dateString);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n  };\n\n  // Render task details and comments\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 task-details-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, taskDetails.title), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FaRegClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), \" Created At\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, formatDateAndTime(taskDetails.created_at))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FaStarHalfAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), \" Status\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, taskDetails.status))))), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, taskDetails.description), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Add Comment\"), /*#__PURE__*/React.createElement(CommentForm, {\n    taskId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default CardDetails;","map":{"version":3,"names":["React","useState","useEffect","useParams","FaRegClock","FaStarHalfAlt","CommentForm","fetchTaskDetails","CardDetails","id","taskDetails","setTaskDetails","title","date","status","description","loading","setLoading","error","setError","fetchDetails","data","console","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formatDateAndTime","dateString","Date","toLocaleDateString","toLocaleTimeString","className","created_at","taskId"],"sources":["/home/rakhi/Project/Task_Comment_management_project/frontend/src/Pages/TaskDetails/TaskDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FaRegClock, FaStarHalfAlt } from \"react-icons/fa\";\nimport \"./TaskDetails.scss\";\nimport CommentForm from \"./CommentForm/CommentForm\";\nimport { fetchTaskDetails } from \"../../api\"; // Import the API call\n\nconst CardDetails = () => {\n  const { id } = useParams(); // Extract task ID from the URL parameters\n\n  // State to hold task details\n  const [taskDetails, setTaskDetails] = useState({\n    title: \"\",\n    date: \"\",\n    status: \"\",\n    description: \"\",\n  });\n\n  const [loading, setLoading] = useState(true); // State to manage loading status\n  const [error, setError] = useState(null); // State to handle errors\n\n  // Fetch task details when the component mounts or when the task ID changes\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        setLoading(true); // Start loading\n        const data = await fetchTaskDetails(id); // Call the API with the task ID\n        setTaskDetails(data || {}); // Update task details or fallback to an empty object\n      } catch (error) {\n        console.error(\"Error fetching task data:\", error);\n        setError(error.message); // Update error state with the error message\n      } finally {\n        setLoading(false); // Stop loading\n      }\n    };\n\n    fetchDetails();\n  }, [id]);\n\n  // Handle loading state\n  if (loading) return <div>Loading...</div>;\n\n  // Handle error state\n  if (error) return <div>Error: {error}</div>;\n\n  // Helper function to format date and time\n  const formatDateAndTime = (dateString) => {\n    const date = new Date(dateString);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n  };\n\n  // Render task details and comments\n  return (\n    <main className=\"content-wrapper\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 task-details-wrap\">\n            {/* Task Title */}\n            <h1 className=\"heading\">{taskDetails.title}</h1>\n\n            {/* Task Details Table */}\n            <table>\n              <tbody>\n                <tr>\n                  <th>\n                    <FaRegClock /> Created At\n                  </th>\n                  <td>{formatDateAndTime(taskDetails.created_at)}</td>\n                </tr>\n                <tr>\n                  <th>\n                    <FaStarHalfAlt /> Status\n                  </th>\n                  <td>\n                    <span className=\"status\">{taskDetails.status}</span>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            {/* Task Description */}\n            <h4 className=\"mt-4\">Description</h4>\n            <p>{taskDetails.description}</p>\n\n            {/* Comment Form Section */}\n            <h6 className=\"mt-4\">Add Comment</h6>\n            <CommentForm taskId={id} />\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default CardDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}